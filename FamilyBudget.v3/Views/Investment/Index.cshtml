@using FamilyBudget.v3.App_Helpers
@model FamilyBudget.v3.Models.InvestmentModel

<div class="container-fluid">

    <!-- Page Heading -->
    <div class="text-center mb-4">
        <h1 class="h3 mb-0 text-gray-800 font-weight-bold">Инвестирование</h1>
    </div>

    <div class="row">
        <div class="col-xl-12 col-md-6 mb-4">
            @if (Model.Message != null)
            {
                @Html.Partial("~/Views/Shared/MessageModel.cshtml", Model.Message)
            }
        </div>
    </div>

    @{
        var getStyle = new Func<decimal, string>((total) => total >= 0 ? "text-success" : "text-danger");
        @helper RenderInstrumentInfoDetails(dynamic position)
        {
            <div class="row no-gutters align-items-center">
                <div class="col">
                    @{
                        string avatarSrc = "https://static.tinkoff.ru/brands/traiding/" + @position.Isin + "x160.png";
                    }
                    <img class="stock-position-avatar" src="@avatarSrc"></img>
                    @if (!string.IsNullOrEmpty(position.Ticker))
                    {
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @position.Name&nbsp;
                            <a class="h6" href="https://www.tinkoff.ru/invest/stocks/@position.Ticker" target="_blank">($@position.Ticker)</a>
                        </div>
                        <div class="h6 mb-0 text-gray-800">@position.Balance шт.</div>
                        <div class="h6 mb-0 text-gray-800">Ср. цена: @position.CurrentPriceInPortfolioPresentation</div>
                    }
                    else
                    {
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @position.Name
                        </div>
                    }
                </div>
            </div>
        }
        @helper RenderInstrumentPriceDetails(dynamic position)
        {
            <div class="row no-gutters align-items-center">
                <div class="col">
                    <div class="h6 mb-0 text-gray-800">
                        @if (!string.IsNullOrEmpty(position.Ticker))
                        {
                            @position.CurrentPriceInMarketPresentation
                        }
                    </div>
                </div>
            </div>
        }
        @helper RenderInstrumentTotalDetails(dynamic position)
        {
            if (!string.IsNullOrEmpty(position.Ticker))
            {
                string colorClass = "text-gray-800";
                string arrowClass = "";
                if (position.CurrentDeltaType == FamilyBudget.v3.App_CodeBase.Tinkoff.Models.DeltaType.Negative)
                {
                    colorClass = "text-danger";
                    arrowClass = "fa-arrow-down text-danger";
                }
                else if (position.CurrentDeltaType == FamilyBudget.v3.App_CodeBase.Tinkoff.Models.DeltaType.Positive)
                {
                    colorClass = "text-success";
                    arrowClass = "fa-arrow-up text-success";
                }

                <div class="row no-gutters align-items-center">
                    <div class="col">
                        <div class="h5 mb-0 font-weight-bold text-gray-800 text-right">@position.CurrentTotalInPortfolioPresentation</div>
                        <div class="h6 mb-0 @colorClass text-right">
                            <i class="fas @arrowClass"></i>
                            @position.CurrentDeltaPresentation (@position.CurrentDeltaPercent%)
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="row no-gutters align-items-center">
                    <div class="col">
                        <div class="h5 mb-0 font-weight-bold text-gray-800 text-right">@position.CurrentTotalInPortfolioPresentation</div>
                    </div>
                </div>
            }
        }
        @helper RenderGrid(dynamic source)
        {
            if (source != null)
            {
                WebGrid grid = WebGridHelpers.CreateWebGridWithJqueryUiStyle(source, rowsPerPage: 100000);
                @grid.GetHtmlJqueryUiStyle(mode: WebGridPagerModes.All, showNoDataFound: true,
                    columns: grid.Columns(
                        grid.Column("Name", "Название", item => Html.Raw(RenderInstrumentInfoDetails(item))),
                        grid.Column("Name", "Текущая цена", item => Html.Raw(RenderInstrumentPriceDetails(item)), "investment-account-table-column-price"),
                        grid.Column("CurrentDeltaPercent", "Итого", item => Html.Raw(RenderInstrumentTotalDetails(item)), "investment-account-table-column-total")));
            }
        }

        if (Model != null && Model.Accounts.Any())
        {
            <div class="row">
                @foreach (var account in Model.Accounts)
                {
                    <div class="col-lg-6">
                        <div class="card border-left-success shadow py-2 mb-4">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col-12 mr-2">
                                        <div class="h5 text-xl-center font-weight-bold text-gray-900 text-uppercase mb-1">@account.Name</div>
                                        <div class="h2 mb-0 text-xl-center font-weight-bold text-primary">
                                            @account.TotalBalancePresentation
                                        </div>
                                        <div class="h6 mb-0 text-xl-center font-weight-bold @getStyle(account.TotalDelta)">
                                            @{
                                                if (account.TotalDelta < 0)
                                                {
                                                    <i class="fas fa-arrow-down text-danger"></i>
                                                }
                                                else if (account.TotalDelta > 0)
                                                {
                                                    <i class="fas fa-arrow-up text-success"></i>
                                                }
                                            }
                                            @account.TotalDeltaPresentation (@account.TotalDeltaPercent%)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (account.Messages.Any())
                        {
                            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                                @foreach (var message in account.Messages)
                                {
                                    <p>@Html.Raw(message.Text)</p>
                                }
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        }

                        <div class="card mb-5">
                            <div class="card-header py-3">
                                <h4 class="m-0 font-weight-bold text-primary">Акции</h4>
                            </div>
                            @RenderGrid(account.Stocks)
                        </div>
                        <div class="card mb-5">
                            <div class="card-header py-3">
                                <h4 class="m-0 font-weight-bold text-primary">Фонды</h4>
                            </div>
                            @RenderGrid(account.Etfs)
                        </div>
                        <div class="card mb-5">
                            <div class="card-header py-3">
                                <h4 class="m-0 font-weight-bold text-primary">Валюта</h4>
                            </div>
                            @RenderGrid(account.Currencies)
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>
