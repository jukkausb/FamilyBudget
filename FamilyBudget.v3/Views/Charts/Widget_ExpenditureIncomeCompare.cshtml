@model FamilyBudget.v3.Models.Widgets.ExpenditureIncomeCompareWidgetModel
<div class="col-md-12">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <div class="input-group date" id="dtStartDateContainer" data-target-input="nearest">
                    @Html.TextBoxFor(model => model.StartDate, Model.StartDate.ToShortDateString(), new { id = "dtExpenditureIncomeStartDate", name = "StartDate", @class = "form-control datetimepicker-input" })
                    <div class="input-group-append" data-target="#dtExpenditureIncomeStartDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <div class="input-group date" id="dtEndDateContainer" data-target-input="nearest">
                    @Html.TextBoxFor(model => model.EndDate, Model.EndDate.ToShortDateString(), new { id = "dtExpenditureIncomeEndDate", name = "EndDate", @class = "form-control datetimepicker-input" })
                    <div class="input-group-append" data-target="#dtExpenditureIncomeEndDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <button class="btn btn-success" onclick="ExpenditureIncomeCompareCallback() "><span class="glyphicon glyphicon-refresh"></span> Обновить</button>
            </div>
        </div>
    </div>
</div>
<div class="col-md-12">
    <div class="text-center" id="expenditureIncomeLoading">
        @Html.Partial("_LoadingIndicator")
    </div>
    <div id="expenditureIncomeChartContainer" style="height: 30rem">
    </div>
</div>

<script type="text/javascript">
    var expenditureIncomeStartDateObj = $('#dtExpenditureIncomeStartDate');
    var expenditureIncomeEndDateObj = $('#dtExpenditureIncomeEndDate');

    $(function () {
        expenditureIncomeStartDateObj.datetimepicker({
            locale: 'ru',
            format: 'L'
        });
        expenditureIncomeEndDateObj.datetimepicker({
            locale: 'ru',
            format: 'L'
        });

        requestExpenditureIncomeChartData();
    });

    function requestExpenditureIncomeChartData() {

        $('#expenditureIncomeLoading').show();
        var selectedStartDate = expenditureIncomeStartDateObj.val();
        var selectedEndDate = expenditureIncomeEndDateObj.val();

        $.ajax(
            {
                type: "POST",
                data: { startDate: selectedStartDate, endDate: selectedEndDate },
                url: "/Charts/Widget_ExpenditureIncomeCompareData"
            })
            .done(function (reportData) {
                $('#expenditureIncomeLoading').hide();
                buildExpenditureIncomeChart(reportData);
            });
    }

    function buildExpenditureIncomeChart(reportData) {

        var containerId = 'expenditureIncomeChartContainer';
        var container = document.getElementById(containerId);
        $(container).html('');
        var canvas = document.createElement("CANVAS");
        container.appendChild(canvas);

        new Chart(canvas, {
            type: 'bar',
            data: {
                labels: _.map(reportData, function (r) {
                    return r.period;
                }),
                datasets: [
                    {
                        label: "Расходы",
                        backgroundColor: "#4e73df",
                        hoverBackgroundColor: "#2e59d9",
                        borderColor: "#4e73df",
                        data: _.map(reportData, function (r) {
                            return r.expenditure;
                        }),
                    },
                    {
                        label: "Доходы",
                        backgroundColor: "#1cc88a",
                        hoverBackgroundColor: "#17a673",
                        borderColor: "#4e73df",
                        data: _.map(reportData, function (r) {
                            return r.income;
                        }),
                    }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 6,
                            autoSkip: false
                        },
                        maxBarThickness: 100,
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 0,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + ' руб.';
                        }
                    }
                },
            }
        });
    }

    function ExpenditureIncomeCompareCallback() {
        requestExpenditureIncomeChartData();
    }
</script>
