@model FamilyBudget.v3.Models.Widgets.ExpenditureByCategoryWidgetModel
<div class="col-md-12">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <div class="input-group date" id="dtStartDateContainer" data-target-input="nearest">
                    <input type="text" id="dtStartDate" name="StartDate" class="form-control datetimepicker-input" data-target="#dtStartDate" />
                    <div class="input-group-append" data-target="#dtStartDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <div class="input-group date" id="dtEndDateContainer" data-target-input="nearest">
                    @*@Html.TextBoxFor(model => model.EndDate, null, new { id = "dtEndDate", name = "EndDate", @class = "form-control datetimepicker-input", data_target = "#dtEndDate" })*@
                    <input type="text" id="dtEndDate" name="EndDate" class="form-control datetimepicker-input" data-target="#dtEndDate" />
                    <div class="input-group-append" data-target="#dtEndDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <button class="btn btn-success mr-2" onclick="ExpenditureByCategoryCallback();"><span class="glyphicon glyphicon-refresh"></span> Обновить</button>
            <button class="btn btn-primary" onclick="ExpenditureByCategoryCallback(true);"><span class="glyphicon glyphicon-refresh"></span> Текущий месяц</button>
        </div>
    </div>
</div>
<div class="col-md-12">
    <div class="text-center" id="expenditureByCategoryLoading">
        @Html.Partial("_LoadingIndicator")
    </div>
    <div id="accountBalanceCircleChartContainer" style="height: 30rem">
    </div>
</div>

<script type="text/javascript">
    var accountBalanceCircleStartDateObj = $('#dtStartDate');
    var accountBalanceCircleEndDateObj = $('#dtEndDate');

    $(function () {
        initializeDateTimePicker('#dtStartDate', new Date(@Model.StartDate.Year, @Model.StartDate.Month, @Model.StartDate.Day));
        initializeDateTimePicker('#dtEndDate', new Date(@Model.EndDate.Year, @Model.EndDate.Month, @Model.EndDate.Day));
        requestExpenditureByCategoryChartData();
    });

    function requestExpenditureByCategoryChartData(currentMonth) {

        if (currentMonth) {
            var today = new Date();
            var firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
            $('#dtStartDate').datetimepicker('date', firstDay);
            $('#dtEndDate').datetimepicker('date', today);
        }

        $('#expenditureByCategoryLoading').show();
        var selectedStartDate = accountBalanceCircleStartDateObj.val();
        var selectedEndDate = accountBalanceCircleEndDateObj.val();

        $.ajax(
            {
                type: "POST",
                data: { startDate: selectedStartDate, endDate: selectedEndDate },
                url: "/Charts/Widget_ExpenditureByCategoryData"
            })
            .done(function (reportData) {
                $('#expenditureByCategoryLoading').hide();
                buildExpenditureByCategoryChart(reportData);
            });
    }

    function buildExpenditureByCategoryChart(reportData) {

        var containerId = 'accountBalanceCircleChartContainer';
        var container = document.getElementById(containerId);
        $(container).html('');
        var canvas = document.createElement("CANVAS");
        container.appendChild(canvas);

        new Chart(canvas, {
            type: 'bar',
            data: {
                labels: _.map(reportData, function (r) {
                    return r.category;
                }),
                datasets: [{
                    label: "Итого",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: _.map(reportData, function (r) {
                        return r.total;
                    }),
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 6,
                            autoSkip: false
                        },
                        maxBarThickness: 100,
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 0,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + ' руб.';
                        }
                    }
                },
            }
        });
    }

    function ExpenditureByCategoryCallback(currentMonth) {
        requestExpenditureByCategoryChartData(currentMonth);
    }
</script>
